{"name":"java","slug":"java","count":3,"postlist":[{"title":"java范型运行时类型获取","uid":"693d61e4ffefde59b7a2ab0d6ba29929","slug":"java/java范型运行时类型获取","date":"2022-03-29T09:02:16.000Z","updated":"2022-05-13T15:59:53.302Z","comments":true,"path":"api/articles/java/java范型运行时类型获取.json","keywords":null,"cover":null,"text":"反射是我喜欢喜欢 java 的一个重要原因，它在保证静态语言特性的同时，为你提供了一些动态的特性，你可以通过反射做一些很令人惊奇的事情。本文将通过反射和继承来让你获取泛型的运行时类型。 java 泛型使用的是 type erasure。它的泛型代码只有一份，泛型实现需要在编译和运...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"java","slug":"java","count":3,"path":"api/tags/java.json"},{"name":"反射","slug":"反射","count":1,"path":"api/tags/反射.json"}],"author":{"name":"Wttch","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Always trust your spirit.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"深入理解java虚拟机（一）","uid":"15c9c1ab2fcef5aa3d42081d95493338","slug":"java/jvm/深入理解java虚拟机/深入理解java虚拟机（一）","date":"2022-05-13T02:54:44.000Z","updated":"2022-05-14T05:45:03.454Z","comments":true,"path":"api/articles/java/jvm/深入理解java虚拟机/深入理解java虚拟机（一）.json","keywords":null,"cover":[],"text":"一、Java 内存区域与内存溢出异常1.1 运行时数据区域java虚拟机在执行java程序的过程中会把它管理的内存划分为若干个不同的数据区域。这些区域各有各自的用途，以及创建时间和销毁时间，有的区域随着虚拟机的进程的启动而一直存在，有些区域则是依赖用户线程的启动和结束而建立和销毁...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[],"tags":[{"name":"java","slug":"java","count":3,"path":"api/tags/java.json"},{"name":"jvm","slug":"jvm","count":2,"path":"api/tags/jvm.json"},{"name":"笔记","slug":"笔记","count":2,"path":"api/tags/笔记.json"}],"author":{"name":"Wttch","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Always trust your spirit.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"深入理解java虚拟机（二）","uid":"91e0a4a93e4ee6f9ef1f4f9607c79a1f","slug":"java/jvm/深入理解java虚拟机/深入理解java虚拟机（二）","date":"2022-05-13T13:09:44.000Z","updated":"2022-05-14T12:22:12.798Z","comments":true,"path":"api/articles/java/jvm/深入理解java虚拟机/深入理解java虚拟机（二）.json","keywords":null,"cover":[],"text":"二、垃圾收集器与内存分配策略 Jvm启动GC日志：-Xloggc:/your/log/path/gc.log，笔者测试使用的是JDK17，启动时会提示参数过时：-Xloggc is deprecated. Will use -Xlog:gc:/your/log/path/gc.l...","link":"","photos":[],"count_time":{"symbolsCount":955,"symbolsTime":"1 mins."},"categories":[{"name":"jvm","slug":"jvm","count":1,"path":"api/categories/jvm.json"}],"tags":[{"name":"java","slug":"java","count":3,"path":"api/tags/java.json"},{"name":"jvm","slug":"jvm","count":2,"path":"api/tags/jvm.json"},{"name":"笔记","slug":"笔记","count":2,"path":"api/tags/笔记.json"}],"author":{"name":"Wttch","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"Always trust your spirit.","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]}